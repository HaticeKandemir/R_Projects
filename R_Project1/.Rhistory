# Create bar plot for Group variable
create_barplot(data, "Group", main_title = "Group Distribution", x_label = "Group", y_label = "Count")
# Create bar plot for Gender variable
create_barplot(data, "Gender", main_title = "Gender Distribution", x_label = "Gender", y_label = "Count")
View(create_barplot)
View(data)
DatasetNA <- read.table("~/Desktop/R_Project1/DatasetNA.txt", quote="\"", comment.char="")
View(DatasetNA)
#çalıştırmadan önce setwd() ile çalışma dizinini değiştirmek gerekiyor
custom_barplot <- function(data, x_var, xlab = "", ylab = "", main = "", xlim = NULL, ylim = NULL, border_color = "black", fill_color = "blue") {
unique_values <- unique(data[[x_var]])
counts <- vector(length = length(unique_values))
for (i in seq_along(unique_values)) {
counts[i] <- sum(data[[x_var]] == unique_values[i])
}
bar_width <- 0.7
bar_positions <- 1:length(unique_values)
plot(NULL, type = "n", xlim = c(0, length(unique_values) + 1), ylim = c(0, max(counts)+5), xlab = xlab, ylab = ylab, main = main,xaxt = 'n')
for (i in 1:length(unique_values)) {
polygon(
c(i - bar_width / 2, i - bar_width / 2, i + bar_width / 2, i + bar_width / 2),
c(0, counts[i], counts[i], 0),
border = border_color,
col = fill_color
)
}
text(bar_positions, counts, labels = counts, pos = 3)
axis(1, at = bar_positions, labels = unique_values)
if (!is.null(xlim)) {
usr <- par("usr")
x_range <- xlim[2] - xlim[1]
usr[1] <- xlim[1] - 0.1 * x_range
usr[2] <- xlim[2] + 0.1 * x_range
par(usr = usr)
}
if (!is.null(ylim)) {
usr <- par("usr")
y_range <- ylim[2] - ylim[1]
usr[3] <- ylim[1] - 0.1 * y_range
usr[4] <- ylim[2] + 0.1 * y_range
par(usr = usr)
}
}
data <- read.table("DatasetNA.txt", header = TRUE)
#çalıştırmadan önce setwd() ile çalışma dizinini değiştirmek gerekiyor
custom_barplot <- function(data, x_var, xlab = "", ylab = "", main = "", xlim = NULL, ylim = NULL, border_color = "black", fill_color = "blue") {
unique_values <- unique(data[[x_var]])
counts <- vector(length = length(unique_values))
for (i in seq_along(unique_values)) {
counts[i] <- sum(data[[x_var]] == unique_values[i])
}
bar_width <- 0.7
bar_positions <- 1:length(unique_values)
plot(NULL, type = "n", xlim = c(0, length(unique_values) + 1), ylim = c(0, max(counts)+5), xlab = xlab, ylab = ylab, main = main,xaxt = 'n')
for (i in 1:length(unique_values)) {
polygon(
c(i - bar_width / 2, i - bar_width / 2, i + bar_width / 2, i + bar_width / 2),
c(0, counts[i], counts[i], 0),
border = border_color,
col = fill_color
)
}
text(bar_positions, counts, labels = counts, pos = 3)
axis(1, at = bar_positions, labels = unique_values)
if (!is.null(xlim)) {
usr <- par("usr")
x_range <- xlim[2] - xlim[1]
usr[1] <- xlim[1] - 0.1 * x_range
usr[2] <- xlim[2] + 0.1 * x_range
par(usr = usr)
}
if (!is.null(ylim)) {
usr <- par("usr")
y_range <- ylim[2] - ylim[1]
usr[3] <- ylim[1] - 0.1 * y_range
usr[4] <- ylim[2] + 0.1 * y_range
par(usr = usr)
}
}
data <- read.table("DatasetNA.txt", header = TRUE)
setwd("/Users/haticekandemir/Desktop/R_Project1")
#çalıştırmadan önce setwd() ile çalışma dizinini değiştirmek gerekiyor
custom_barplot <- function(data, x_var, xlab = "", ylab = "", main = "", xlim = NULL, ylim = NULL, border_color = "black", fill_color = "blue") {
unique_values <- unique(data[[x_var]])
counts <- vector(length = length(unique_values))
for (i in seq_along(unique_values)) {
counts[i] <- sum(data[[x_var]] == unique_values[i])
}
bar_width <- 0.7
bar_positions <- 1:length(unique_values)
plot(NULL, type = "n", xlim = c(0, length(unique_values) + 1), ylim = c(0, max(counts)+5), xlab = xlab, ylab = ylab, main = main,xaxt = 'n')
for (i in 1:length(unique_values)) {
polygon(
c(i - bar_width / 2, i - bar_width / 2, i + bar_width / 2, i + bar_width / 2),
c(0, counts[i], counts[i], 0),
border = border_color,
col = fill_color
)
}
text(bar_positions, counts, labels = counts, pos = 3)
axis(1, at = bar_positions, labels = unique_values)
if (!is.null(xlim)) {
usr <- par("usr")
x_range <- xlim[2] - xlim[1]
usr[1] <- xlim[1] - 0.1 * x_range
usr[2] <- xlim[2] + 0.1 * x_range
par(usr = usr)
}
if (!is.null(ylim)) {
usr <- par("usr")
y_range <- ylim[2] - ylim[1]
usr[3] <- ylim[1] - 0.1 * y_range
usr[4] <- ylim[2] + 0.1 * y_range
par(usr = usr)
}
}
data <- read.table("DatasetNA.txt", header = TRUE)
custom_barplot(data, "Gender", xlab = "Gender", ylab = "Count", main = "Gender Counts", xlim = c(0, 6), ylim = c(0, 80), fill_color = "pink")
custom_barplot(data, "Group", xlab = "Group", ylab = "Count", main = "Group Counts", xlim = c(0, 6), ylim = c(0, 50), fill_color = "purple")
#çalıştırmadan önce setwd() ile çalışma dizinini değiştirmek gerekiyor
custom_barplot <- function(data, x_var, xlab = "", ylab = "", main = "", xlim = NULL, ylim = NULL, border_color = "black", fill_color = "blue") {
unique_values <- unique(data[[x_var]])
counts <- vector(length = length(unique_values))
for (i in seq_along(unique_values)) {
counts[i] <- sum(data[[x_var]] == unique_values[i])
}
bar_width <- 0.7
bar_positions <- 1:length(unique_values)
plot(NULL, type = "n", xlim = c(0, length(unique_values) + 1), ylim = c(0, max(counts)+5), xlab = xlab, ylab = ylab, main = main,xaxt = 'n')
for (i in 1:length(unique_values)) {
polygon(
c(i - bar_width / 2, i - bar_width / 2, i + bar_width / 2, i + bar_width / 2),
c(0, counts[i], counts[i], 0),
border = border_color,
col = fill_color
)
}
text(bar_positions, counts, labels = counts, pos = 3)
axis(1, at = bar_positions, labels = "unique_values")
if (!is.null(xlim)) {
usr <- par("usr")
x_range <- xlim[2] - xlim[1]
usr[1] <- xlim[1] - 0.1 * x_range
usr[2] <- xlim[2] + 0.1 * x_range
par(usr = usr)
}
if (!is.null(ylim)) {
usr <- par("usr")
y_range <- ylim[2] - ylim[1]
usr[3] <- ylim[1] - 0.1 * y_range
usr[4] <- ylim[2] + 0.1 * y_range
par(usr = usr)
}
}
data <- read.table("DatasetNA.txt", header = TRUE)
custom_barplot(data, "Group", xlab = "Group", ylab = "Count", main = "Group Counts", xlim = c(0, 6), ylim = c(0, 50), fill_color = "purple")
custom_barplot <- function(data, x_var="Group", xlab = "", ylab = "", main = "", xlim = NULL, ylim = NULL, border_color = "black", fill_color = "blue") {
unique_values <- unique(data[[x_var]])
counts <- vector(length = length(unique_values))
for (i in seq_along(unique_values)) {
counts[i] <- sum(data[[x_var]] == unique_values[i])
}
bar_width <- 0.7
bar_positions <- 1:length(unique_values)
plot(NULL, type = "n", xlim = c(0, length(unique_values) + 1), ylim = c(0, max(counts)+5), xlab = xlab, ylab = ylab, main = main,xaxt = 'n')
for (i in 1:length(unique_values)) {
polygon(
c(i - bar_width / 2, i - bar_width / 2, i + bar_width / 2, i + bar_width / 2),
c(0, counts[i], counts[i], 0),
border = border_color,
col = fill_color
)
}
text(bar_positions, counts, labels = counts, pos = 3)
axis(1, at = bar_positions, labels = unique_values)
if (!is.null(xlim)) {
usr <- par("usr")
x_range <- xlim[2] - xlim[1]
usr[1] <- xlim[1] - 0.1 * x_range
usr[2] <- xlim[2] + 0.1 * x_range
par(usr = usr)
}
if (!is.null(ylim)) {
usr <- par("usr")
y_range <- ylim[2] - ylim[1]
usr[3] <- ylim[1] - 0.1 * y_range
usr[4] <- ylim[2] + 0.1 * y_range
par(usr = usr)
}
}
data <- read.table("DatasetNA.txt", header = TRUE)
custom_barplot(data, "Group", xlab = "Group", ylab = "Count", main = "Group Counts", xlim = c(0, 6), ylim = c(0, 50), fill_color = "purple")
custom_barplot <- function(data, x_var="Group", xlab = "", ylab = "", main = "", xlim = NULL, ylim = NULL, border_color = "black", fill_color = "blue") {
unique_values <- unique(data[[x_var]])
counts <- vector(length = length(unique_values))
for (i in seq_along(unique_values)) {
counts[i] <- sum(data[[x_var]] == unique_values[i])
}
bar_width <- 0.7
bar_positions <- 1:length(unique_values)
plot(NULL, type = "n", xlim = c(0, length(unique_values) + 1), ylim = c(0, max(counts)+5), xlab = xlab, ylab = ylab, main = main,xaxt = 'n')
for (i in 1:length(unique_values)) {
polygon(
c(i - bar_width / 2, i - bar_width / 2, i + bar_width / 2, i + bar_width / 2),
c(0, counts[i], counts[i], 0),
border = border_color,
col = fill_color
)
}
text(bar_positions, counts, labels = counts, pos = 3)
axis(1, at = bar_positions, labels = unique_values)
if (!is.null(xlim)) {
usr <- par("usr")
x_range <- xlim[2] - xlim[1]
usr[1] <- xlim[1] - 0.1 * x_range
usr[2] <- xlim[2] + 0.1 * x_range
par(usr = usr)
}
if (!is.null(ylim)) {
usr <- par("usr")
y_range <- ylim[2] - ylim[1]
usr[3] <- ylim[1] - 0.1 * y_range
usr[4] <- ylim[2] + 0.1 * y_range
par(usr = usr)
}
}
data <- read.table("DatasetNA.txt", header = TRUE)
custom_barplot(data, "Group", xlab = "Group", ylab = "Count", main = "Group Counts", xlim = c(0, 6), ylim = c(0, 50), fill_color = "purple")
#çalıştırmadan önce setwd() ile çalışma dizinini değiştirmek gerekiyor
custom_barplot <- function(data, x_var="data$Group", xlab = "", ylab = "", main = "", xlim = NULL, ylim = NULL, border_color = "black", fill_color = "blue") {
unique_values <- unique(data[[x_var]])
counts <- vector(length = length(unique_values))
for (i in seq_along(unique_values)) {
counts[i] <- sum(data[[x_var]] == unique_values[i])
}
bar_width <- 0.7
bar_positions <- 1:length(unique_values)
plot(NULL, type = "n", xlim = c(0, length(unique_values) + 1), ylim = c(0, max(counts)+5), xlab = xlab, ylab = ylab, main = main,xaxt = 'n')
for (i in 1:length(unique_values)) {
polygon(
c(i - bar_width / 2, i - bar_width / 2, i + bar_width / 2, i + bar_width / 2),
c(0, counts[i], counts[i], 0),
border = border_color,
col = fill_color
)
}
text(bar_positions, counts, labels = counts, pos = 3)
axis(1, at = bar_positions, labels = unique_values)
if (!is.null(xlim)) {
usr <- par("usr")
x_range <- xlim[2] - xlim[1]
usr[1] <- xlim[1] - 0.1 * x_range
usr[2] <- xlim[2] + 0.1 * x_range
par(usr = usr)
}
if (!is.null(ylim)) {
usr <- par("usr")
y_range <- ylim[2] - ylim[1]
usr[3] <- ylim[1] - 0.1 * y_range
usr[4] <- ylim[2] + 0.1 * y_range
par(usr = usr)
}
}
data <- read.table("DatasetNA.txt", header = TRUE)
custom_barplot(data, "Group", xlab = "Group", ylab = "Count", main = "Group Counts", xlim = c(0, 6), ylim = c(0, 50), fill_color = "purple")
custom_barplot <- function(data, x_var="", xlab = "", ylab = "", main = "", xlim = NULL, ylim = NULL, border_color = "black", fill_color = "blue") {
unique_values <- unique(data[[x_var]])
counts <- vector(length = length(unique_values))
for (i in seq_along(unique_values)) {
counts[i] <- sum(data[[x_var]] == unique_values[i])
}
bar_width <- 0.7
bar_positions <- 1:length(unique_values)
plot(NULL, type = "n", xlim = c(0, length(unique_values) + 1), ylim = c(0, max(counts)+5), xlab = xlab, ylab = ylab, main = main,xaxt = 'n')
for (i in 1:length(unique_values)) {
polygon(
c(i - bar_width / 2, i - bar_width / 2, i + bar_width / 2, i + bar_width / 2),
c(0, counts[i], counts[i], 0),
border = border_color,
col = fill_color
)
}
text(bar_positions, counts, labels = counts, pos = 3)
axis(1, at = bar_positions, labels = unique_values)
if (!is.null(xlim)) {
usr <- par("usr")
x_range <- xlim[2] - xlim[1]
usr[1] <- xlim[1] - 0.1 * x_range
usr[2] <- xlim[2] + 0.1 * x_range
par(usr = usr)
}
if (!is.null(ylim)) {
usr <- par("usr")
y_range <- ylim[2] - ylim[1]
usr[3] <- ylim[1] - 0.1 * y_range
usr[4] <- ylim[2] + 0.1 * y_range
par(usr = usr)
}
}
data <- read.table("DatasetNA.txt", header = TRUE)
custom_barplot(data, "Group", xlab = "Group", ylab = "Count", main = "Group Counts", xlim = c(0, 6), ylim = c(0, 50), fill_color = "purple")
custom_barplot <- function(data, x_var="", xlab = "", ylab = "", main = "", xlim = NULL, ylim = NULL, border_color = "black", fill_color = "blue") {
unique_values <- c("group1", "group2", "group3", "group4")
counts <- vector(length = length(unique_values))
for (i in seq_along(unique_values)) {
counts[i] <- sum(data[[x_var]] == unique_values[i])
}
bar_width <- 0.7
bar_positions <- 1:length(unique_values)
plot(NULL, type = "n", xlim = c(0, length(unique_values) + 1), ylim = c(0, max(counts)+5), xlab = xlab, ylab = ylab, main = main,xaxt = 'n')
for (i in 1:length(unique_values)) {
polygon(
c(i - bar_width / 2, i - bar_width / 2, i + bar_width / 2, i + bar_width / 2),
c(0, counts[i], counts[i], 0),
border = border_color,
col = fill_color
)
}
text(bar_positions, counts, labels = counts, pos = 3)
axis(1, at = bar_positions, labels = unique_values)
if (!is.null(xlim)) {
usr <- par("usr")
x_range <- xlim[2] - xlim[1]
usr[1] <- xlim[1] - 0.1 * x_range
usr[2] <- xlim[2] + 0.1 * x_range
par(usr = usr)
}
if (!is.null(ylim)) {
usr <- par("usr")
y_range <- ylim[2] - ylim[1]
usr[3] <- ylim[1] - 0.1 * y_range
usr[4] <- ylim[2] + 0.1 * y_range
par(usr = usr)
}
}
data <- read.table("DatasetNA.txt", header = TRUE)
custom_barplot(data, "Group", xlab = "Group", ylab = "Count", main = "Group Counts", xlim = c(0, 6), ylim = c(0, 50), fill_color = "purple")
custom_barplot <- function(data, x_var="", xlab = "", ylab = "", main = "", xlim = NULL, ylim = NULL, border_color = "black", fill_color = "blue") {
unique_values <- c("Group1", "Group2", "Group3", "Group4")
counts <- vector(length = length(unique_values))
for (i in seq_along(unique_values)) {
counts[i] <- sum(data[[x_var]] == unique_values[i])
}
bar_width <- 0.7
bar_positions <- 1:length(unique_values)
plot(NULL, type = "n", xlim = c(0, length(unique_values) + 1), ylim = c(0, max(counts)+5), xlab = xlab, ylab = ylab, main = main,xaxt = 'n')
for (i in 1:length(unique_values)) {
polygon(
c(i - bar_width / 2, i - bar_width / 2, i + bar_width / 2, i + bar_width / 2),
c(0, counts[i], counts[i], 0),
border = border_color,
col = fill_color
)
}
text(bar_positions, counts, labels = counts, pos = 3)
axis(1, at = bar_positions, labels = unique_values)
if (!is.null(xlim)) {
usr <- par("usr")
x_range <- xlim[2] - xlim[1]
usr[1] <- xlim[1] - 0.1 * x_range
usr[2] <- xlim[2] + 0.1 * x_range
par(usr = usr)
}
if (!is.null(ylim)) {
usr <- par("usr")
y_range <- ylim[2] - ylim[1]
usr[3] <- ylim[1] - 0.1 * y_range
usr[4] <- ylim[2] + 0.1 * y_range
par(usr = usr)
}
}
data <- read.table("DatasetNA.txt", header = TRUE)
custom_barplot(data, "Group", xlab = "Group", ylab = "Count", main = "Group Counts", xlim = c(0, 6), ylim = c(0, 50), fill_color = "purple")
custom_barplot <- function(data, x_var="", xlab = "", ylab = "", main = "", xlim = NULL, ylim = NULL, border_color = "black", fill_color = "blue") {
unique_values <- unique(data[[x_var]])
counts <- vector(length = length(unique_values))
for (i in seq_along(unique_values)) {
counts[i] <- sum(data[[x_var]] == unique_values[i])
}
bar_width <- 0.7
bar_positions <- 1:length(unique_values)
plot(NULL, type = "n", xlim = c(0, length(unique_values) + 1), ylim = c(0, max(counts)+5), xlab = xlab, ylab = ylab, main = main,xaxt = 'n')
for (i in 1:length(unique_values)) {
polygon(
c(i - bar_width / 2, i - bar_width / 2, i + bar_width / 2, i + bar_width / 2),
c(0, counts[i], counts[i], 0),
border = border_color,
col = fill_color
)
}
text(bar_positions, counts, labels = counts, pos = 3)
axis(1, at = bar_positions, labels = unique_values)
if (!is.null(xlim)) {
usr <- par("usr")
x_range <- xlim[2] - xlim[1]
usr[1] <- xlim[1] - 0.1 * x_range
usr[2] <- xlim[2] + 0.1 * x_range
par(usr = usr)
}
if (!is.null(ylim)) {
usr <- par("usr")
y_range <- ylim[2] - ylim[1]
usr[3] <- ylim[1] - 0.1 * y_range
usr[4] <- ylim[2] + 0.1 * y_range
par(usr = usr)
}
}
data <- read.table("DatasetNA.txt", header = TRUE)
custom_barplot(data, "Group", xlab = "Group", ylab = "Count", main = "Group Counts", xlim = c(0, 6), ylim = c(0, 50), fill_color = "purple")
custom_barplot(data, "Group", xlab = "Group", ylab = "Count", main = "Group Counts", xlim = c(0, 6), ylim = c(0, 50), fill_color = "purple")
custom_barplot(data, "Gender", xlab = "Gender", ylab = "Count", main = "Gender Counts", xlim = c(0, 6), ylim = c(0, 80), fill_color = "pink")
custom_barplot <- function(data, x_var="Group", xlab = "", ylab = "", main = "", xlim = NULL, ylim = NULL, border_color = "black", fill_color = "blue") {
unique_values <- unique(data[[x_var]])
counts <- vector(length = length(unique_values))
for (i in seq_along(unique_values)) {
counts[i] <- sum(data[[x_var]] == unique_values[i])
}
bar_width <- 0.7
bar_positions <- 1:length(unique_values)
plot(NULL, type = "n", xlim = c(0, length(unique_values) + 1), ylim = c(0, max(counts)+5), xlab = xlab, ylab = ylab, main = main,xaxt = 'n')
for (i in 1:length(unique_values)) {
polygon(
c(i - bar_width / 2, i - bar_width / 2, i + bar_width / 2, i + bar_width / 2),
c(0, counts[i], counts[i], 0),
border = border_color,
col = fill_color
)
}
text(bar_positions, counts, labels = counts, pos = 3)
axis(1, at = bar_positions, labels = unique_values)
if (!is.null(xlim)) {
usr <- par("usr")
x_range <- xlim[2] - xlim[1]
usr[1] <- xlim[1] - 0.1 * x_range
usr[2] <- xlim[2] + 0.1 * x_range
par(usr = usr)
}
if (!is.null(ylim)) {
usr <- par("usr")
y_range <- ylim[2] - ylim[1]
usr[3] <- ylim[1] - 0.1 * y_range
usr[4] <- ylim[2] + 0.1 * y_range
par(usr = usr)
}
}
data <- read.table("DatasetNA.txt", header = TRUE)
custom_barplot(data, "Gender", xlab = "Gender", ylab = "Count", main = "Gender Counts", xlim = c(0, 6), ylim = c(0, 80), fill_color = "pink")
custom_barplot(data, "Group", xlab = "Group", ylab = "Count", main = "Group Counts", xlim = c(0, 6), ylim = c(0, 50), fill_color = "purple")
custom_barplot <- function(data, x_var="", xlab = "", ylab = "", main = "", xlim = NULL, ylim = NULL, border_color = "black", fill_color = "blue") {
unique_values <- unique(data[[x_var]])
counts <- vector(length = length(unique_values))
for (i in seq_along(unique_values)) {
counts[i] <- sum(data[[x_var]] == unique_values[i])
}
bar_width <- 0.7
bar_positions <- 1:length(unique_values)
plot(NULL, type = "n", xlim = c(0, length(unique_values) + 1), ylim = c(0, max(counts)+5), xlab = xlab, ylab = ylab, main = main,xaxt = 'n')
for (i in 1:length(unique_values)) {
polygon(
c(i - bar_width / 2, i - bar_width / 2, i + bar_width / 2, i + bar_width / 2),
c(0, counts[i], counts[i], 0),
border = border_color,
col = fill_color
)
}
text(bar_positions, counts, labels = counts, pos = 3)
axis(1, at = bar_positions, labels = unique_values)
if (!is.null(xlim)) {
usr <- par("usr")
x_range <- xlim[2] - xlim[1]
usr[1] <- xlim[1] - 0.1 * x_range
usr[2] <- xlim[2] + 0.1 * x_range
par(usr = usr)
}
if (!is.null(ylim)) {
usr <- par("usr")
y_range <- ylim[2] - ylim[1]
usr[3] <- ylim[1] - 0.1 * y_range
usr[4] <- ylim[2] + 0.1 * y_range
par(usr = usr)
}
}
data <- read.table("DatasetNA.txt", header = TRUE)
custom_barplot(data, "Group", xlab = "Group", ylab = "Count", main = "Group Counts", xlim = c(0, 6), ylim = c(0, 50), fill_color = "purple")
custom_barplot(data, "Gender", xlab = "Gender", ylab = "Count", main = "Gender Counts", xlim = c(0, 6), ylim = c(0, 80), fill_color = "pink")
custom_barplot(data, "Group", xlab = "Group", ylab = "Count", main = "Group Counts", xlim = c(0, 6), ylim = c(0, 50), fill_color = "red")
create_histogram <- function(data, variable, num_bins = 20, main_title = "", x_label = "", y_label = "", x_limits = "", y_limits = "", color = "blue") {
# Extracting the variable from the data
var <- data[[variable]]
# Removing non-finite values
var <- var[is.finite(var)]
# Checking if range of variable is finite
if (!is.finite(min(var)) || !is.finite(max(var))) {
cat("Warning: Variable contains non-finite values.\n")
return(NULL)
}
# Calculating bin width
bin_width <- (max(var) - min(var)) / num_bins
# Generating histogram data
bins <- seq(min(var), max(var) + bin_width, bin_width)
hist_data <- hist(var, breaks = bins, plot = FALSE)
# Plotting histogram
plot(hist_data$breaks[-1], hist_data$counts, type = "h", lwd = 10, col = color, xlab = x_label, ylab = y_label, main = main_title, xlim = x_limits, ylim = y_limits)
}
# Read the data
data <- read.table("DatasetNA.txt", header = TRUE)
custom_histogram(data, "Var1", num_bins = 10, main_title = "Histogram of Var1", x_label = "Var1", y_label = "Frequency", color = "purple")
custom_histogram(data, "Var2", bins = 10, title = "Histogram of Var2", xlab = "Var2", ylab = "Frequency", color = "blue")
# Set up plotting parameters
par(mfrow = c(2, 4))  # Divide the output screen for multiple histograms
# Plot histograms for each variable
create_histogram(data, "Var1", main_title = "Histogram of Var1", x_label = "Var1", y_label = "Frequency")
